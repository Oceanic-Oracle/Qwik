package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"
	"fmt"
	"warehouse/internal/graph/model"
)

// CreateWarehouse is the resolver for the createWarehouse field.
func (r *mutationResolver) CreateWarehouse(ctx context.Context, input model.CreateWarehouseInput) (*model.Warehouse, error) {
	panic(fmt.Errorf("not implemented: CreateWarehouse - createWarehouse"))
}

// CreateRack is the resolver for the createRack field.
func (r *mutationResolver) CreateRack(ctx context.Context, input model.CreateRackInput) (*model.Rack, error) {
	panic(fmt.Errorf("not implemented: CreateRack - createRack"))
}

// CreateShelf is the resolver for the createShelf field.
func (r *mutationResolver) CreateShelf(ctx context.Context, input model.CreateShelfInput) (*model.Shelf, error) {
	panic(fmt.Errorf("not implemented: CreateShelf - createShelf"))
}

// CreateProduct is the resolver for the createProduct field.
func (r *mutationResolver) CreateProduct(ctx context.Context, input model.CreateProductInput) (*model.Product, error) {
	panic(fmt.Errorf("not implemented: CreateProduct - createProduct"))
}

// AddProductToShelf is the resolver for the addProductToShelf field.
func (r *mutationResolver) AddProductToShelf(ctx context.Context, input model.AddProductToShelfInput) (*model.ShelfProduct, error) {
	panic(fmt.Errorf("not implemented: AddProductToShelf - addProductToShelf"))
}

// Warehouse is the resolver for the warehouse field.
func (r *queryResolver) Warehouse(ctx context.Context, id string) (*model.Warehouse, error) {
	panic(fmt.Errorf("not implemented: Warehouse - warehouse"))
}

// Warehouses is the resolver for the warehouses field.
func (r *queryResolver) Warehouses(ctx context.Context) ([]*model.Warehouse, error) {
	panic(fmt.Errorf("not implemented: Warehouses - warehouses"))
}

// Product is the resolver for the product field.
func (r *queryResolver) Product(ctx context.Context, id string) (*model.Product, error) {
	panic(fmt.Errorf("not implemented: Product - product"))
}

// Products is the resolver for the products field.
func (r *queryResolver) Products(ctx context.Context, visibleOnly *bool) ([]*model.Product, error) {
	panic(fmt.Errorf("not implemented: Products - products"))
}

// Shelf is the resolver for the shelf field.
func (r *queryResolver) Shelf(ctx context.Context, id string) (*model.Shelf, error) {
	panic(fmt.Errorf("not implemented: Shelf - shelf"))
}

// Shelves is the resolver for the shelves field.
func (r *queryResolver) Shelves(ctx context.Context) ([]*model.Shelf, error) {
	panic(fmt.Errorf("not implemented: Shelves - shelves"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
